/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{

	__asm("SVC #8");
    /* Loop forever */

	uint32_t SVC_num;

	__asm("LDR %0,R0":"r"(SVC_num)::);

	printf("%d\n",SVC_num);
	for(;;);
}


__attribute ((naked))void SVC_Handler(void)
{
	__asm("MRS R0,MSP");
	__asm ("B SVC_Handler_c");
}


int SVC_Handler_c(uint32_t *pMSP)
{
	printf("SVC handler\n");

	uint8_t *stack_PC = (uint8_t *)pMSP[6];//7th variableis PC in stack frame

	//printf("%p",stack_PC);

	uint8_t *SVC_p = stack_PC-2;

	uint8_t SVC_Number = *SVC_p;

	printf("%d",SVC_Number);

	SVC_Number+4;

	*pMSP[0]= SVC_Number;//storing SVC number in R0 to use in main function.


}
